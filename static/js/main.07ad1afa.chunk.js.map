{"version":3,"sources":["components/Container/Container.js","components/Header/Header.js","components/Icon/Icon.js","components/Page/Folder/FolderList/FolderList.js","components/Page/Folder/Folder.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Container","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","props","children","React","Component","Header","Container_Container","Icon","style","FolderList","sector","slice","map","s","j","date","create","components_Icon_Icon","begin","substr","length","end","trip","locationItem","location","from","airport","code","to","total","price","currency","amount","traveller","bookings","_this","booking","i","whenCreated","xStatus","customer","_xStatus","firstName","lastName","getTravellers","getBookingDates","getJourneys","getTotals","data","renderBookingList","Folder","call","state","isLoading","_this2","axios","get","proxyurl","then","response","setState","catch","error","alert","getBookings","_this$state","id","FolderList_FolderList","App","components_Header_Header","Page_Folder_Folder","Boolean","window","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07ad1afa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class Container extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { Container } from '../Container/Container';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <Container>\r\n            </Container>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\n\r\nconst Icon = (props) => {\r\n    return (\r\n        <i className={\"material-icons-outlined \" + props.style}>\r\n            {props.children}\r\n        </i>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\nimport Icon from '../../../Icon/Icon';\r\n\r\n\r\nexport class FolderList extends React.Component {\r\n\r\n    getBookingDates(sector) {\r\n        return (typeof (sector) == 'object') ?\r\n            <div>\r\n                {sector.slice(0, 1).map((s, j) => {\r\n                    const date = Object.create(sector);\r\n                    return (\r\n\r\n                        <p><Icon>date_range</Icon>\r\n                            {\" Du \" + date[0].begin.substr(0, 10) + \" au \" + date[date.length - 1].end.substr(0, 10)}\r\n                            <br />\r\n                        </p>\r\n\r\n                    )\r\n                })}\r\n            </div>\r\n            : null\r\n    }\r\n\r\n    /**\r\n     * Affiche le trajet du client et des voyageurs\r\n     * @param {*} sector Tableau d'objets imbriqués\r\n     */\r\n    getJourneys(sector) {\r\n        return (typeof (sector) == 'object') ?\r\n            <div className=\"journey\">\r\n                <h6><strong>Itinéraire de voyage</strong></h6>\r\n                <div className=\"airport-list\">\r\n                    {\r\n                        sector.map((trip, j) => {\r\n\r\n                            const location = Object.create(sector);\r\n                            let locationItem;\r\n                            switch (j) {\r\n                                case 0: /** Alterner le cas defaut avec celui-ci une fois comparaison entre la valeur actuelle à j et celle à j + 1 est similaire\r\n                                    pour afficher le véritable résultat désiré */\r\n                                    locationItem = <p>\r\n                                        {location[j].from.airport.code + \" \"} <Icon style=\"flight\">local_airport</Icon> {location[j].to.airport.code + \" \"} \r\n                                    </p>;\r\n                                    break;\r\n                                case (location.length - 1):\r\n                                    locationItem = <p>\r\n                                    <Icon style=\"flight\">local_airport</Icon> {\" \" + location[j].to.airport.code}\r\n                                    </p>;\r\n                                    break;\r\n                                default:\r\n                                    locationItem = <p>\r\n                                    <Icon style=\"flight\">local_airport</Icon>  {location[j].to.airport.code + \" \"} \r\n                                    </p>;\r\n                            }\r\n                            return (\r\n                                locationItem\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n            : null\r\n    }\r\n\r\n    getTotals(total) {\r\n        return (typeof (total) == 'object') ?\r\n            total.map((price, j) => { if (price.currency === \"EUR\") { return price.amount + \"€\" } })\r\n            : null\r\n    }\r\n\r\n    getTravellers(traveller) {\r\n        return (\r\n            traveller.length > 0 ?\r\n                <div><Icon>person</Icon> {\" Comprend \" + traveller.length +\r\n                    (traveller.length === 1 ?\r\n                        \" voyageur\" :\r\n                        \" voyageurs\")}</div>\r\n                : null\r\n        )\r\n    }\r\n\r\n    renderBookingList(bookings) {\r\n        return (\r\n            bookings.map((booking, i) => {\r\n                const { code, whenCreated, xStatus, customer, traveller, total, sector } = booking;\r\n                const _xStatus = (xStatus === \"cancel\" ?\r\n                    <p><Icon>clear</Icon>Annulé</p>\r\n                    : (xStatus === \"actionRequired\" ?\r\n                        <p><Icon>sync</Icon>En attente d'une action</p>\r\n                        : xStatus === \"confirm\" ?\r\n                            <p><Icon>done</Icon> Terminé</p>\r\n                            :\r\n                            <p><Icon>info</Icon> Information</p>));\r\n\r\n                return (\r\n                    <div className={\"row h-100 folder-\" + i} key={i}>\r\n                        <div className={\"col-2 text-center fb\"}>\r\n                            <Icon>folder</Icon>\r\n                            <h5>{code}</h5>\r\n                            <h6>{whenCreated}</h6>\r\n                        </div>\r\n                        <div className=\"col-8 desc\">\r\n                            <div className=\"row h-100\">\r\n                                <div className=\"col-9\">\r\n                                    {\r\n                                        customer.firstName && customer.lastName ?\r\n                                            <div className=\"client\">\r\n                                                <strong>{customer.firstName + \" \" + customer.lastName}</strong>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <div className=\"status\">{_xStatus}</div>\r\n                                    <div className=\"traveller\">\r\n                                        {\r\n                                            this.getTravellers(traveller)\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <div className=\"dates\">\r\n                                        {\r\n                                            this.getBookingDates(sector)\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"text-left\">\r\n                                        {\r\n                                            this.getJourneys(sector)\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-3 text-center price align-self-center\">\r\n                                    <h3 className=\"font-weight-bold\">\r\n                                        {\r\n                                            this.getTotals(total)\r\n                                        }\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const bookings = this.props.data;\r\n        return <div>{this.renderBookingList(bookings)}</div>\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport { Container } from '../../Container/Container';\r\nimport { FolderList } from './FolderList/FolderList';\r\n\r\nexport class Folder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bookings: null,\r\n            isLoading: true\r\n        };\r\n    }\r\n    /**\r\n     * Make a HTTP request for data using axios \r\n     */\r\n    getBookings() {\r\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // Proxy used to access any CORS\r\n        const url = 'https://www.ghusse.com/afidium/response.json'; // API where data is hosted\r\n        axios\r\n            .get(proxyurl + url)\r\n            // Get and store data, then change the loading state\r\n            .then(response => {\r\n                const bookings = response.data.data.booking;\r\n                this.setState({\r\n                    bookings: bookings,\r\n                    isLoading: false\r\n                })\r\n            })\r\n\r\n            // Display the error encountered in an alert popup\r\n            // and change the loading state\r\n            .catch(error => {\r\n                alert(error);\r\n                this.setState({\r\n                    isLoading: false\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Let the app know the data is ready to be rendered\r\n        this.getBookings();\r\n    }\r\n    render() {\r\n        const { bookings, isLoading } = this.state;\r\n        return (\r\n            <section id=\"folders\" >\r\n\r\n                <Container>\r\n                    <div className=\"slideInLeft\">\r\n                        <h4 className=\"title\">Soqima/Afidium - Dossiers de voyages</h4>\r\n                        <h5>Résultats de recherche</h5>\r\n\r\n                        {!isLoading ? (\r\n                            <div className=\"slideInUp\">\r\n                                <FolderList data={bookings} />\r\n                            </div>\r\n                        )\r\n\r\n                            : (<p>'Chargement des réservations...'</p>)\r\n                        }</div>\r\n                </Container>\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nFolder.propTypes = {\r\n    data: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Folder;","import React, { Component } from 'react';\n\nimport './App.css';\nimport '../../styles/theme.scss';\nimport '../../styles/custom.scss';\n\nimport Header from '../Header/Header';\nimport Folder from '../Page/Folder/Folder';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Folder />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}